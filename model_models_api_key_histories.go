/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozaiplatformgosdk

import (
	"encoding/json"
)

// checks if the ModelsApiKeyHistories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsApiKeyHistories{}

// ModelsApiKeyHistories struct for ModelsApiKeyHistories
type ModelsApiKeyHistories struct {
	CreatedAt *string `json:"created_at,omitempty"`
	ModelId *string `json:"model_id,omitempty"`
	Status *string `json:"status,omitempty"`
	TaskId *string `json:"task_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewModelsApiKeyHistories instantiates a new ModelsApiKeyHistories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsApiKeyHistories() *ModelsApiKeyHistories {
	this := ModelsApiKeyHistories{}
	return &this
}

// NewModelsApiKeyHistoriesWithDefaults instantiates a new ModelsApiKeyHistories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsApiKeyHistoriesWithDefaults() *ModelsApiKeyHistories {
	this := ModelsApiKeyHistories{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsApiKeyHistories) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyHistories) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsApiKeyHistories) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsApiKeyHistories) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *ModelsApiKeyHistories) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyHistories) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *ModelsApiKeyHistories) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *ModelsApiKeyHistories) SetModelId(v string) {
	o.ModelId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelsApiKeyHistories) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyHistories) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelsApiKeyHistories) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelsApiKeyHistories) SetStatus(v string) {
	o.Status = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *ModelsApiKeyHistories) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyHistories) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *ModelsApiKeyHistories) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *ModelsApiKeyHistories) SetTaskId(v string) {
	o.TaskId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsApiKeyHistories) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyHistories) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsApiKeyHistories) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsApiKeyHistories) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsApiKeyHistories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsApiKeyHistories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ModelId) {
		toSerialize["model_id"] = o.ModelId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableModelsApiKeyHistories struct {
	value *ModelsApiKeyHistories
	isSet bool
}

func (v NullableModelsApiKeyHistories) Get() *ModelsApiKeyHistories {
	return v.value
}

func (v *NullableModelsApiKeyHistories) Set(val *ModelsApiKeyHistories) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsApiKeyHistories) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsApiKeyHistories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsApiKeyHistories(val *ModelsApiKeyHistories) *NullableModelsApiKeyHistories {
	return &NullableModelsApiKeyHistories{value: val, isSet: true}
}

func (v NullableModelsApiKeyHistories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsApiKeyHistories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


