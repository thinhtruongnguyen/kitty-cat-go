/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozaiplatformgosdk

import (
	"encoding/json"
)

// checks if the ModelsApiKeyPackage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsApiKeyPackage{}

// ModelsApiKeyPackage struct for ModelsApiKeyPackage
type ModelsApiKeyPackage struct {
	ModelId *string `json:"model_id,omitempty"`
	UsesRemaining *int32 `json:"uses_remaining,omitempty"`
}

// NewModelsApiKeyPackage instantiates a new ModelsApiKeyPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsApiKeyPackage() *ModelsApiKeyPackage {
	this := ModelsApiKeyPackage{}
	return &this
}

// NewModelsApiKeyPackageWithDefaults instantiates a new ModelsApiKeyPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsApiKeyPackageWithDefaults() *ModelsApiKeyPackage {
	this := ModelsApiKeyPackage{}
	return &this
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *ModelsApiKeyPackage) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyPackage) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *ModelsApiKeyPackage) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *ModelsApiKeyPackage) SetModelId(v string) {
	o.ModelId = &v
}

// GetUsesRemaining returns the UsesRemaining field value if set, zero value otherwise.
func (o *ModelsApiKeyPackage) GetUsesRemaining() int32 {
	if o == nil || IsNil(o.UsesRemaining) {
		var ret int32
		return ret
	}
	return *o.UsesRemaining
}

// GetUsesRemainingOk returns a tuple with the UsesRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyPackage) GetUsesRemainingOk() (*int32, bool) {
	if o == nil || IsNil(o.UsesRemaining) {
		return nil, false
	}
	return o.UsesRemaining, true
}

// HasUsesRemaining returns a boolean if a field has been set.
func (o *ModelsApiKeyPackage) HasUsesRemaining() bool {
	if o != nil && !IsNil(o.UsesRemaining) {
		return true
	}

	return false
}

// SetUsesRemaining gets a reference to the given int32 and assigns it to the UsesRemaining field.
func (o *ModelsApiKeyPackage) SetUsesRemaining(v int32) {
	o.UsesRemaining = &v
}

func (o ModelsApiKeyPackage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsApiKeyPackage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ModelId) {
		toSerialize["model_id"] = o.ModelId
	}
	if !IsNil(o.UsesRemaining) {
		toSerialize["uses_remaining"] = o.UsesRemaining
	}
	return toSerialize, nil
}

type NullableModelsApiKeyPackage struct {
	value *ModelsApiKeyPackage
	isSet bool
}

func (v NullableModelsApiKeyPackage) Get() *ModelsApiKeyPackage {
	return v.value
}

func (v *NullableModelsApiKeyPackage) Set(val *ModelsApiKeyPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsApiKeyPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsApiKeyPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsApiKeyPackage(val *ModelsApiKeyPackage) *NullableModelsApiKeyPackage {
	return &NullableModelsApiKeyPackage{value: val, isSet: true}
}

func (v NullableModelsApiKeyPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsApiKeyPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


