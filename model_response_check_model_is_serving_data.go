/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozaiplatformgosdk

import (
	"encoding/json"
)

// checks if the ResponseCheckModelIsServingData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCheckModelIsServingData{}

// ResponseCheckModelIsServingData struct for ResponseCheckModelIsServingData
type ResponseCheckModelIsServingData struct {
	Consumers *int32 `json:"consumers,omitempty"`
	Serving *bool `json:"serving,omitempty"`
}

// NewResponseCheckModelIsServingData instantiates a new ResponseCheckModelIsServingData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCheckModelIsServingData() *ResponseCheckModelIsServingData {
	this := ResponseCheckModelIsServingData{}
	return &this
}

// NewResponseCheckModelIsServingDataWithDefaults instantiates a new ResponseCheckModelIsServingData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCheckModelIsServingDataWithDefaults() *ResponseCheckModelIsServingData {
	this := ResponseCheckModelIsServingData{}
	return &this
}

// GetConsumers returns the Consumers field value if set, zero value otherwise.
func (o *ResponseCheckModelIsServingData) GetConsumers() int32 {
	if o == nil || IsNil(o.Consumers) {
		var ret int32
		return ret
	}
	return *o.Consumers
}

// GetConsumersOk returns a tuple with the Consumers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCheckModelIsServingData) GetConsumersOk() (*int32, bool) {
	if o == nil || IsNil(o.Consumers) {
		return nil, false
	}
	return o.Consumers, true
}

// HasConsumers returns a boolean if a field has been set.
func (o *ResponseCheckModelIsServingData) HasConsumers() bool {
	if o != nil && !IsNil(o.Consumers) {
		return true
	}

	return false
}

// SetConsumers gets a reference to the given int32 and assigns it to the Consumers field.
func (o *ResponseCheckModelIsServingData) SetConsumers(v int32) {
	o.Consumers = &v
}

// GetServing returns the Serving field value if set, zero value otherwise.
func (o *ResponseCheckModelIsServingData) GetServing() bool {
	if o == nil || IsNil(o.Serving) {
		var ret bool
		return ret
	}
	return *o.Serving
}

// GetServingOk returns a tuple with the Serving field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseCheckModelIsServingData) GetServingOk() (*bool, bool) {
	if o == nil || IsNil(o.Serving) {
		return nil, false
	}
	return o.Serving, true
}

// HasServing returns a boolean if a field has been set.
func (o *ResponseCheckModelIsServingData) HasServing() bool {
	if o != nil && !IsNil(o.Serving) {
		return true
	}

	return false
}

// SetServing gets a reference to the given bool and assigns it to the Serving field.
func (o *ResponseCheckModelIsServingData) SetServing(v bool) {
	o.Serving = &v
}

func (o ResponseCheckModelIsServingData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCheckModelIsServingData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Consumers) {
		toSerialize["consumers"] = o.Consumers
	}
	if !IsNil(o.Serving) {
		toSerialize["serving"] = o.Serving
	}
	return toSerialize, nil
}

type NullableResponseCheckModelIsServingData struct {
	value *ResponseCheckModelIsServingData
	isSet bool
}

func (v NullableResponseCheckModelIsServingData) Get() *ResponseCheckModelIsServingData {
	return v.value
}

func (v *NullableResponseCheckModelIsServingData) Set(val *ResponseCheckModelIsServingData) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCheckModelIsServingData) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCheckModelIsServingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCheckModelIsServingData(val *ResponseCheckModelIsServingData) *NullableResponseCheckModelIsServingData {
	return &NullableResponseCheckModelIsServingData{value: val, isSet: true}
}

func (v NullableResponseCheckModelIsServingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCheckModelIsServingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


