/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozaiplatformgosdk

import (
	"encoding/json"
)

// checks if the ResponseApiKeyHistoryListData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseApiKeyHistoryListData{}

// ResponseApiKeyHistoryListData struct for ResponseApiKeyHistoryListData
type ResponseApiKeyHistoryListData struct {
	Records []ModelsApiKeyHistories `json:"records,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewResponseApiKeyHistoryListData instantiates a new ResponseApiKeyHistoryListData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseApiKeyHistoryListData() *ResponseApiKeyHistoryListData {
	this := ResponseApiKeyHistoryListData{}
	return &this
}

// NewResponseApiKeyHistoryListDataWithDefaults instantiates a new ResponseApiKeyHistoryListData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseApiKeyHistoryListDataWithDefaults() *ResponseApiKeyHistoryListData {
	this := ResponseApiKeyHistoryListData{}
	return &this
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *ResponseApiKeyHistoryListData) GetRecords() []ModelsApiKeyHistories {
	if o == nil || IsNil(o.Records) {
		var ret []ModelsApiKeyHistories
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseApiKeyHistoryListData) GetRecordsOk() ([]ModelsApiKeyHistories, bool) {
	if o == nil || IsNil(o.Records) {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *ResponseApiKeyHistoryListData) HasRecords() bool {
	if o != nil && !IsNil(o.Records) {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []ModelsApiKeyHistories and assigns it to the Records field.
func (o *ResponseApiKeyHistoryListData) SetRecords(v []ModelsApiKeyHistories) {
	o.Records = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ResponseApiKeyHistoryListData) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseApiKeyHistoryListData) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ResponseApiKeyHistoryListData) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ResponseApiKeyHistoryListData) SetTotal(v int32) {
	o.Total = &v
}

func (o ResponseApiKeyHistoryListData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseApiKeyHistoryListData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Records) {
		toSerialize["records"] = o.Records
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableResponseApiKeyHistoryListData struct {
	value *ResponseApiKeyHistoryListData
	isSet bool
}

func (v NullableResponseApiKeyHistoryListData) Get() *ResponseApiKeyHistoryListData {
	return v.value
}

func (v *NullableResponseApiKeyHistoryListData) Set(val *ResponseApiKeyHistoryListData) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseApiKeyHistoryListData) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseApiKeyHistoryListData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseApiKeyHistoryListData(val *ResponseApiKeyHistoryListData) *NullableResponseApiKeyHistoryListData {
	return &NullableResponseApiKeyHistoryListData{value: val, isSet: true}
}

func (v NullableResponseApiKeyHistoryListData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseApiKeyHistoryListData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


