/*
AIOZ-AI-PLATFORM API

Testing ApiKeyModelVerifyAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package aiozaiplatformgosdk

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/thinhtruongnguyen/publish-go"
)

func Test_aiozaiplatformgosdk_ApiKeyModelVerifyAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ApiKeyModelVerifyAPIService ApiKeyModelIdPreVerifyPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ApiKeyModelVerifyAPI.ApiKeyModelIdPreVerifyPost(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeyModelVerifyAPIService ApiKeyModelIdVerifyCostPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ApiKeyModelVerifyAPI.ApiKeyModelIdVerifyCostPost(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeyModelVerifyAPIService ApiKeyModelIdVerifyPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ApiKeyModelVerifyAPI.ApiKeyModelIdVerifyPost(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeyModelVerifyAPIService ApiKeyModelIdVerifyTaskGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ApiKeyModelVerifyAPI.ApiKeyModelIdVerifyTaskGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeyModelVerifyAPIService ApiKeyModelVerifyHubTaskIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ApiKeyModelVerifyAPI.ApiKeyModelVerifyHubTaskIdGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeyModelVerifyAPIService ApiKeyModelVerifyPlatformTaskIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ApiKeyModelVerifyAPI.ApiKeyModelVerifyPlatformTaskIdGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
