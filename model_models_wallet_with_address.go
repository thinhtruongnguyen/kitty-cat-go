/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozaiplatformgosdk

import (
	"encoding/json"
)

// checks if the ModelsWalletWithAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsWalletWithAddress{}

// ModelsWalletWithAddress struct for ModelsWalletWithAddress
type ModelsWalletWithAddress struct {
	Balance       *string `json:"balance,omitempty"`
	Debt          *string `json:"debt,omitempty"`
	Earnings      *string `json:"earnings,omitempty"`
	FreeBalance   *string `json:"free_balance,omitempty"`
	WalletAddress *string `json:"wallet_address,omitempty"`
}

// NewModelsWalletWithAddress instantiates a new ModelsWalletWithAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsWalletWithAddress() *ModelsWalletWithAddress {
	this := ModelsWalletWithAddress{}
	return &this
}

// NewModelsWalletWithAddressWithDefaults instantiates a new ModelsWalletWithAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsWalletWithAddressWithDefaults() *ModelsWalletWithAddress {
	this := ModelsWalletWithAddress{}
	return &this
}

// GetWalletAddressOk returns a tuple with the WalletAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWalletWithAddress) GetWalletAddressOk() (*string, bool) {
	if o == nil || IsNil(o.WalletAddress) {
		return nil, false
	}
	return o.WalletAddress, true
}

// HasWalletAddress returns a boolean if a field has been set.
func (o *ModelsWalletWithAddress) HasWalletAddress() bool {
	if o != nil && !IsNil(o.WalletAddress) {
		return true
	}

	return false
}

// SetWalletAddress gets a reference to the given string and assigns it to the WalletAddress field.
func (o *ModelsWalletWithAddress) SetWalletAddress(v string) {
	o.WalletAddress = &v
}

func (o ModelsWalletWithAddress) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsWalletWithAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.Debt) {
		toSerialize["debt"] = o.Debt
	}
	if !IsNil(o.Earnings) {
		toSerialize["earnings"] = o.Earnings
	}
	if !IsNil(o.FreeBalance) {
		toSerialize["free_balance"] = o.FreeBalance
	}
	if !IsNil(o.WalletAddress) {
		toSerialize["wallet_address"] = o.WalletAddress
	}
	return toSerialize, nil
}

type NullableModelsWalletWithAddress struct {
	value *ModelsWalletWithAddress
	isSet bool
}

func (v NullableModelsWalletWithAddress) Get() *ModelsWalletWithAddress {
	return v.value
}

func (v *NullableModelsWalletWithAddress) Set(val *ModelsWalletWithAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsWalletWithAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsWalletWithAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsWalletWithAddress(val *ModelsWalletWithAddress) *NullableModelsWalletWithAddress {
	return &NullableModelsWalletWithAddress{value: val, isSet: true}
}

func (v NullableModelsWalletWithAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsWalletWithAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
