/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiozaiplatformgosdk

import (
	"encoding/json"
)

// checks if the ModelsModelVersioning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsModelVersioning{}

// ModelsModelVersioning struct for ModelsModelVersioning
type ModelsModelVersioning struct {
	CommitHash *string `json:"commit_hash,omitempty"`
	CommitMessage *string `json:"commit_message,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Dependency map[string]interface{} `json:"dependency,omitempty"`
	Id *string `json:"id,omitempty"`
	InputFormat map[string]interface{} `json:"input_format,omitempty"`
	ModelId *string `json:"model_id,omitempty"`
	NodeReward *float32 `json:"node_reward,omitempty"`
	OutputFormat map[string]interface{} `json:"output_format,omitempty"`
	Platform *string `json:"platform,omitempty"`
	SysRequire map[string]interface{} `json:"sys_require,omitempty"`
	TestResult map[string]interface{} `json:"test_result,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	VerifyStatus *string `json:"verify_status,omitempty"`
	VerifyTaskId *string `json:"verify_task_id,omitempty"`
}

// NewModelsModelVersioning instantiates a new ModelsModelVersioning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsModelVersioning() *ModelsModelVersioning {
	this := ModelsModelVersioning{}
	return &this
}

// NewModelsModelVersioningWithDefaults instantiates a new ModelsModelVersioning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsModelVersioningWithDefaults() *ModelsModelVersioning {
	this := ModelsModelVersioning{}
	return &this
}

// GetCommitHash returns the CommitHash field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetCommitHash() string {
	if o == nil || IsNil(o.CommitHash) {
		var ret string
		return ret
	}
	return *o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetCommitHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitHash) {
		return nil, false
	}
	return o.CommitHash, true
}

// HasCommitHash returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasCommitHash() bool {
	if o != nil && !IsNil(o.CommitHash) {
		return true
	}

	return false
}

// SetCommitHash gets a reference to the given string and assigns it to the CommitHash field.
func (o *ModelsModelVersioning) SetCommitHash(v string) {
	o.CommitHash = &v
}

// GetCommitMessage returns the CommitMessage field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetCommitMessage() string {
	if o == nil || IsNil(o.CommitMessage) {
		var ret string
		return ret
	}
	return *o.CommitMessage
}

// GetCommitMessageOk returns a tuple with the CommitMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetCommitMessageOk() (*string, bool) {
	if o == nil || IsNil(o.CommitMessage) {
		return nil, false
	}
	return o.CommitMessage, true
}

// HasCommitMessage returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasCommitMessage() bool {
	if o != nil && !IsNil(o.CommitMessage) {
		return true
	}

	return false
}

// SetCommitMessage gets a reference to the given string and assigns it to the CommitMessage field.
func (o *ModelsModelVersioning) SetCommitMessage(v string) {
	o.CommitMessage = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsModelVersioning) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDependency returns the Dependency field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetDependency() map[string]interface{} {
	if o == nil || IsNil(o.Dependency) {
		var ret map[string]interface{}
		return ret
	}
	return o.Dependency
}

// GetDependencyOk returns a tuple with the Dependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetDependencyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Dependency) {
		return map[string]interface{}{}, false
	}
	return o.Dependency, true
}

// HasDependency returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasDependency() bool {
	if o != nil && !IsNil(o.Dependency) {
		return true
	}

	return false
}

// SetDependency gets a reference to the given map[string]interface{} and assigns it to the Dependency field.
func (o *ModelsModelVersioning) SetDependency(v map[string]interface{}) {
	o.Dependency = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsModelVersioning) SetId(v string) {
	o.Id = &v
}

// GetInputFormat returns the InputFormat field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetInputFormat() map[string]interface{} {
	if o == nil || IsNil(o.InputFormat) {
		var ret map[string]interface{}
		return ret
	}
	return o.InputFormat
}

// GetInputFormatOk returns a tuple with the InputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetInputFormatOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InputFormat) {
		return map[string]interface{}{}, false
	}
	return o.InputFormat, true
}

// HasInputFormat returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasInputFormat() bool {
	if o != nil && !IsNil(o.InputFormat) {
		return true
	}

	return false
}

// SetInputFormat gets a reference to the given map[string]interface{} and assigns it to the InputFormat field.
func (o *ModelsModelVersioning) SetInputFormat(v map[string]interface{}) {
	o.InputFormat = v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *ModelsModelVersioning) SetModelId(v string) {
	o.ModelId = &v
}

// GetNodeReward returns the NodeReward field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetNodeReward() float32 {
	if o == nil || IsNil(o.NodeReward) {
		var ret float32
		return ret
	}
	return *o.NodeReward
}

// GetNodeRewardOk returns a tuple with the NodeReward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetNodeRewardOk() (*float32, bool) {
	if o == nil || IsNil(o.NodeReward) {
		return nil, false
	}
	return o.NodeReward, true
}

// HasNodeReward returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasNodeReward() bool {
	if o != nil && !IsNil(o.NodeReward) {
		return true
	}

	return false
}

// SetNodeReward gets a reference to the given float32 and assigns it to the NodeReward field.
func (o *ModelsModelVersioning) SetNodeReward(v float32) {
	o.NodeReward = &v
}

// GetOutputFormat returns the OutputFormat field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetOutputFormat() map[string]interface{} {
	if o == nil || IsNil(o.OutputFormat) {
		var ret map[string]interface{}
		return ret
	}
	return o.OutputFormat
}

// GetOutputFormatOk returns a tuple with the OutputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetOutputFormatOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OutputFormat) {
		return map[string]interface{}{}, false
	}
	return o.OutputFormat, true
}

// HasOutputFormat returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasOutputFormat() bool {
	if o != nil && !IsNil(o.OutputFormat) {
		return true
	}

	return false
}

// SetOutputFormat gets a reference to the given map[string]interface{} and assigns it to the OutputFormat field.
func (o *ModelsModelVersioning) SetOutputFormat(v map[string]interface{}) {
	o.OutputFormat = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *ModelsModelVersioning) SetPlatform(v string) {
	o.Platform = &v
}

// GetSysRequire returns the SysRequire field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetSysRequire() map[string]interface{} {
	if o == nil || IsNil(o.SysRequire) {
		var ret map[string]interface{}
		return ret
	}
	return o.SysRequire
}

// GetSysRequireOk returns a tuple with the SysRequire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetSysRequireOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SysRequire) {
		return map[string]interface{}{}, false
	}
	return o.SysRequire, true
}

// HasSysRequire returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasSysRequire() bool {
	if o != nil && !IsNil(o.SysRequire) {
		return true
	}

	return false
}

// SetSysRequire gets a reference to the given map[string]interface{} and assigns it to the SysRequire field.
func (o *ModelsModelVersioning) SetSysRequire(v map[string]interface{}) {
	o.SysRequire = v
}

// GetTestResult returns the TestResult field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetTestResult() map[string]interface{} {
	if o == nil || IsNil(o.TestResult) {
		var ret map[string]interface{}
		return ret
	}
	return o.TestResult
}

// GetTestResultOk returns a tuple with the TestResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetTestResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TestResult) {
		return map[string]interface{}{}, false
	}
	return o.TestResult, true
}

// HasTestResult returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasTestResult() bool {
	if o != nil && !IsNil(o.TestResult) {
		return true
	}

	return false
}

// SetTestResult gets a reference to the given map[string]interface{} and assigns it to the TestResult field.
func (o *ModelsModelVersioning) SetTestResult(v map[string]interface{}) {
	o.TestResult = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsModelVersioning) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVerifyStatus returns the VerifyStatus field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetVerifyStatus() string {
	if o == nil || IsNil(o.VerifyStatus) {
		var ret string
		return ret
	}
	return *o.VerifyStatus
}

// GetVerifyStatusOk returns a tuple with the VerifyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetVerifyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyStatus) {
		return nil, false
	}
	return o.VerifyStatus, true
}

// HasVerifyStatus returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasVerifyStatus() bool {
	if o != nil && !IsNil(o.VerifyStatus) {
		return true
	}

	return false
}

// SetVerifyStatus gets a reference to the given string and assigns it to the VerifyStatus field.
func (o *ModelsModelVersioning) SetVerifyStatus(v string) {
	o.VerifyStatus = &v
}

// GetVerifyTaskId returns the VerifyTaskId field value if set, zero value otherwise.
func (o *ModelsModelVersioning) GetVerifyTaskId() string {
	if o == nil || IsNil(o.VerifyTaskId) {
		var ret string
		return ret
	}
	return *o.VerifyTaskId
}

// GetVerifyTaskIdOk returns a tuple with the VerifyTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioning) GetVerifyTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyTaskId) {
		return nil, false
	}
	return o.VerifyTaskId, true
}

// HasVerifyTaskId returns a boolean if a field has been set.
func (o *ModelsModelVersioning) HasVerifyTaskId() bool {
	if o != nil && !IsNil(o.VerifyTaskId) {
		return true
	}

	return false
}

// SetVerifyTaskId gets a reference to the given string and assigns it to the VerifyTaskId field.
func (o *ModelsModelVersioning) SetVerifyTaskId(v string) {
	o.VerifyTaskId = &v
}

func (o ModelsModelVersioning) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsModelVersioning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommitHash) {
		toSerialize["commit_hash"] = o.CommitHash
	}
	if !IsNil(o.CommitMessage) {
		toSerialize["commit_message"] = o.CommitMessage
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Dependency) {
		toSerialize["dependency"] = o.Dependency
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InputFormat) {
		toSerialize["input_format"] = o.InputFormat
	}
	if !IsNil(o.ModelId) {
		toSerialize["model_id"] = o.ModelId
	}
	if !IsNil(o.NodeReward) {
		toSerialize["node_reward"] = o.NodeReward
	}
	if !IsNil(o.OutputFormat) {
		toSerialize["output_format"] = o.OutputFormat
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.SysRequire) {
		toSerialize["sys_require"] = o.SysRequire
	}
	if !IsNil(o.TestResult) {
		toSerialize["test_result"] = o.TestResult
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.VerifyStatus) {
		toSerialize["verify_status"] = o.VerifyStatus
	}
	if !IsNil(o.VerifyTaskId) {
		toSerialize["verify_task_id"] = o.VerifyTaskId
	}
	return toSerialize, nil
}

type NullableModelsModelVersioning struct {
	value *ModelsModelVersioning
	isSet bool
}

func (v NullableModelsModelVersioning) Get() *ModelsModelVersioning {
	return v.value
}

func (v *NullableModelsModelVersioning) Set(val *ModelsModelVersioning) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsModelVersioning) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsModelVersioning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsModelVersioning(val *ModelsModelVersioning) *NullableModelsModelVersioning {
	return &NullableModelsModelVersioning{value: val, isSet: true}
}

func (v NullableModelsModelVersioning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsModelVersioning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


