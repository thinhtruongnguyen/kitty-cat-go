/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ResponseGetCommitHistoryData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseGetCommitHistoryData{}

// ResponseGetCommitHistoryData struct for ResponseGetCommitHistoryData
type ResponseGetCommitHistoryData struct {
	Commit []ModelsCommit `json:"commit,omitempty"`
	HasMore *bool `json:"has_more,omitempty"`
	LastPage *int32 `json:"last_page,omitempty"`
}

// NewResponseGetCommitHistoryData instantiates a new ResponseGetCommitHistoryData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseGetCommitHistoryData() *ResponseGetCommitHistoryData {
	this := ResponseGetCommitHistoryData{}
	return &this
}

// NewResponseGetCommitHistoryDataWithDefaults instantiates a new ResponseGetCommitHistoryData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseGetCommitHistoryDataWithDefaults() *ResponseGetCommitHistoryData {
	this := ResponseGetCommitHistoryData{}
	return &this
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *ResponseGetCommitHistoryData) GetCommit() []ModelsCommit {
	if o == nil || IsNil(o.Commit) {
		var ret []ModelsCommit
		return ret
	}
	return o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetCommitHistoryData) GetCommitOk() ([]ModelsCommit, bool) {
	if o == nil || IsNil(o.Commit) {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *ResponseGetCommitHistoryData) HasCommit() bool {
	if o != nil && !IsNil(o.Commit) {
		return true
	}

	return false
}

// SetCommit gets a reference to the given []ModelsCommit and assigns it to the Commit field.
func (o *ResponseGetCommitHistoryData) SetCommit(v []ModelsCommit) {
	o.Commit = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *ResponseGetCommitHistoryData) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetCommitHistoryData) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *ResponseGetCommitHistoryData) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *ResponseGetCommitHistoryData) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetLastPage returns the LastPage field value if set, zero value otherwise.
func (o *ResponseGetCommitHistoryData) GetLastPage() int32 {
	if o == nil || IsNil(o.LastPage) {
		var ret int32
		return ret
	}
	return *o.LastPage
}

// GetLastPageOk returns a tuple with the LastPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetCommitHistoryData) GetLastPageOk() (*int32, bool) {
	if o == nil || IsNil(o.LastPage) {
		return nil, false
	}
	return o.LastPage, true
}

// HasLastPage returns a boolean if a field has been set.
func (o *ResponseGetCommitHistoryData) HasLastPage() bool {
	if o != nil && !IsNil(o.LastPage) {
		return true
	}

	return false
}

// SetLastPage gets a reference to the given int32 and assigns it to the LastPage field.
func (o *ResponseGetCommitHistoryData) SetLastPage(v int32) {
	o.LastPage = &v
}

func (o ResponseGetCommitHistoryData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseGetCommitHistoryData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commit) {
		toSerialize["commit"] = o.Commit
	}
	if !IsNil(o.HasMore) {
		toSerialize["has_more"] = o.HasMore
	}
	if !IsNil(o.LastPage) {
		toSerialize["last_page"] = o.LastPage
	}
	return toSerialize, nil
}

type NullableResponseGetCommitHistoryData struct {
	value *ResponseGetCommitHistoryData
	isSet bool
}

func (v NullableResponseGetCommitHistoryData) Get() *ResponseGetCommitHistoryData {
	return v.value
}

func (v *NullableResponseGetCommitHistoryData) Set(val *ResponseGetCommitHistoryData) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseGetCommitHistoryData) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseGetCommitHistoryData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseGetCommitHistoryData(val *ResponseGetCommitHistoryData) *NullableResponseGetCommitHistoryData {
	return &NullableResponseGetCommitHistoryData{value: val, isSet: true}
}

func (v NullableResponseGetCommitHistoryData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseGetCommitHistoryData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


