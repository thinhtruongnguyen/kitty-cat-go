/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsCommitMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCommitMeta{}

// ModelsCommitMeta struct for ModelsCommitMeta
type ModelsCommitMeta struct {
	Created *string `json:"created,omitempty"`
	Sha *string `json:"sha,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewModelsCommitMeta instantiates a new ModelsCommitMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCommitMeta() *ModelsCommitMeta {
	this := ModelsCommitMeta{}
	return &this
}

// NewModelsCommitMetaWithDefaults instantiates a new ModelsCommitMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCommitMetaWithDefaults() *ModelsCommitMeta {
	this := ModelsCommitMeta{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ModelsCommitMeta) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCommitMeta) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ModelsCommitMeta) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ModelsCommitMeta) SetCreated(v string) {
	o.Created = &v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *ModelsCommitMeta) GetSha() string {
	if o == nil || IsNil(o.Sha) {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCommitMeta) GetShaOk() (*string, bool) {
	if o == nil || IsNil(o.Sha) {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *ModelsCommitMeta) HasSha() bool {
	if o != nil && !IsNil(o.Sha) {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *ModelsCommitMeta) SetSha(v string) {
	o.Sha = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ModelsCommitMeta) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCommitMeta) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ModelsCommitMeta) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ModelsCommitMeta) SetUrl(v string) {
	o.Url = &v
}

func (o ModelsCommitMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCommitMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Sha) {
		toSerialize["sha"] = o.Sha
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableModelsCommitMeta struct {
	value *ModelsCommitMeta
	isSet bool
}

func (v NullableModelsCommitMeta) Get() *ModelsCommitMeta {
	return v.value
}

func (v *NullableModelsCommitMeta) Set(val *ModelsCommitMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCommitMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCommitMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCommitMeta(val *ModelsCommitMeta) *NullableModelsCommitMeta {
	return &NullableModelsCommitMeta{value: val, isSet: true}
}

func (v NullableModelsCommitMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCommitMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


