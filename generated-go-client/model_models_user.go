/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsUser{}

// ModelsUser struct for ModelsUser
type ModelsUser struct {
	AllowRequestToJoin *bool `json:"allow_request_to_join,omitempty"`
	AvatarUrl *string `json:"avatar_url,omitempty"`
	Bio *string `json:"bio,omitempty"`
	Blocked *bool `json:"blocked,omitempty"`
	BlockedAt *string `json:"blocked_at,omitempty"`
	Email *string `json:"email,omitempty"`
	Followers []ModelsFollow `json:"followers,omitempty"`
	FollowersCount *int32 `json:"followers_count,omitempty"`
	Followings []ModelsFollow `json:"followings,omitempty"`
	FollowingsCount *int32 `json:"followings_count,omitempty"`
	GithubLink *string `json:"github_link,omitempty"`
	GithubName *string `json:"github_name,omitempty"`
	HomePageName *string `json:"home_page_name,omitempty"`
	Id *string `json:"id,omitempty"`
	Interests *string `json:"interests,omitempty"`
	InviteOffers []ModelsOffer `json:"invite_offers,omitempty"`
	InviteOffersCount *int32 `json:"invite_offers_count,omitempty"`
	IsFollowing *bool `json:"is_following,omitempty"`
	JoinId *string `json:"join_id,omitempty"`
	JoinOffers []ModelsOffer `json:"join_offers,omitempty"`
	JoinOffersCount *int32 `json:"join_offers_count,omitempty"`
	Members []ModelsMember `json:"members,omitempty"`
	MembersCount *int32 `json:"members_count,omitempty"`
	Name *string `json:"name,omitempty"`
	Role *string `json:"role,omitempty"`
	Token *string `json:"token,omitempty"`
	TwitterLink *string `json:"twitter_link,omitempty"`
	TwitterName *string `json:"twitter_name,omitempty"`
	Type *string `json:"type,omitempty"`
	Username *string `json:"username,omitempty"`
	Verified *bool `json:"verified,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Wallet *ModelsWallet `json:"wallet,omitempty"`
	WalletAddress *string `json:"wallet_address,omitempty"`
	WalletConnection *string `json:"wallet_connection,omitempty"`
}

// NewModelsUser instantiates a new ModelsUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsUser() *ModelsUser {
	this := ModelsUser{}
	return &this
}

// NewModelsUserWithDefaults instantiates a new ModelsUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsUserWithDefaults() *ModelsUser {
	this := ModelsUser{}
	return &this
}

// GetAllowRequestToJoin returns the AllowRequestToJoin field value if set, zero value otherwise.
func (o *ModelsUser) GetAllowRequestToJoin() bool {
	if o == nil || IsNil(o.AllowRequestToJoin) {
		var ret bool
		return ret
	}
	return *o.AllowRequestToJoin
}

// GetAllowRequestToJoinOk returns a tuple with the AllowRequestToJoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetAllowRequestToJoinOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowRequestToJoin) {
		return nil, false
	}
	return o.AllowRequestToJoin, true
}

// HasAllowRequestToJoin returns a boolean if a field has been set.
func (o *ModelsUser) HasAllowRequestToJoin() bool {
	if o != nil && !IsNil(o.AllowRequestToJoin) {
		return true
	}

	return false
}

// SetAllowRequestToJoin gets a reference to the given bool and assigns it to the AllowRequestToJoin field.
func (o *ModelsUser) SetAllowRequestToJoin(v bool) {
	o.AllowRequestToJoin = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *ModelsUser) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *ModelsUser) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *ModelsUser) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetBio returns the Bio field value if set, zero value otherwise.
func (o *ModelsUser) GetBio() string {
	if o == nil || IsNil(o.Bio) {
		var ret string
		return ret
	}
	return *o.Bio
}

// GetBioOk returns a tuple with the Bio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetBioOk() (*string, bool) {
	if o == nil || IsNil(o.Bio) {
		return nil, false
	}
	return o.Bio, true
}

// HasBio returns a boolean if a field has been set.
func (o *ModelsUser) HasBio() bool {
	if o != nil && !IsNil(o.Bio) {
		return true
	}

	return false
}

// SetBio gets a reference to the given string and assigns it to the Bio field.
func (o *ModelsUser) SetBio(v string) {
	o.Bio = &v
}

// GetBlocked returns the Blocked field value if set, zero value otherwise.
func (o *ModelsUser) GetBlocked() bool {
	if o == nil || IsNil(o.Blocked) {
		var ret bool
		return ret
	}
	return *o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetBlockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Blocked) {
		return nil, false
	}
	return o.Blocked, true
}

// HasBlocked returns a boolean if a field has been set.
func (o *ModelsUser) HasBlocked() bool {
	if o != nil && !IsNil(o.Blocked) {
		return true
	}

	return false
}

// SetBlocked gets a reference to the given bool and assigns it to the Blocked field.
func (o *ModelsUser) SetBlocked(v bool) {
	o.Blocked = &v
}

// GetBlockedAt returns the BlockedAt field value if set, zero value otherwise.
func (o *ModelsUser) GetBlockedAt() string {
	if o == nil || IsNil(o.BlockedAt) {
		var ret string
		return ret
	}
	return *o.BlockedAt
}

// GetBlockedAtOk returns a tuple with the BlockedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetBlockedAtOk() (*string, bool) {
	if o == nil || IsNil(o.BlockedAt) {
		return nil, false
	}
	return o.BlockedAt, true
}

// HasBlockedAt returns a boolean if a field has been set.
func (o *ModelsUser) HasBlockedAt() bool {
	if o != nil && !IsNil(o.BlockedAt) {
		return true
	}

	return false
}

// SetBlockedAt gets a reference to the given string and assigns it to the BlockedAt field.
func (o *ModelsUser) SetBlockedAt(v string) {
	o.BlockedAt = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ModelsUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ModelsUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ModelsUser) SetEmail(v string) {
	o.Email = &v
}

// GetFollowers returns the Followers field value if set, zero value otherwise.
func (o *ModelsUser) GetFollowers() []ModelsFollow {
	if o == nil || IsNil(o.Followers) {
		var ret []ModelsFollow
		return ret
	}
	return o.Followers
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetFollowersOk() ([]ModelsFollow, bool) {
	if o == nil || IsNil(o.Followers) {
		return nil, false
	}
	return o.Followers, true
}

// HasFollowers returns a boolean if a field has been set.
func (o *ModelsUser) HasFollowers() bool {
	if o != nil && !IsNil(o.Followers) {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given []ModelsFollow and assigns it to the Followers field.
func (o *ModelsUser) SetFollowers(v []ModelsFollow) {
	o.Followers = v
}

// GetFollowersCount returns the FollowersCount field value if set, zero value otherwise.
func (o *ModelsUser) GetFollowersCount() int32 {
	if o == nil || IsNil(o.FollowersCount) {
		var ret int32
		return ret
	}
	return *o.FollowersCount
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetFollowersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FollowersCount) {
		return nil, false
	}
	return o.FollowersCount, true
}

// HasFollowersCount returns a boolean if a field has been set.
func (o *ModelsUser) HasFollowersCount() bool {
	if o != nil && !IsNil(o.FollowersCount) {
		return true
	}

	return false
}

// SetFollowersCount gets a reference to the given int32 and assigns it to the FollowersCount field.
func (o *ModelsUser) SetFollowersCount(v int32) {
	o.FollowersCount = &v
}

// GetFollowings returns the Followings field value if set, zero value otherwise.
func (o *ModelsUser) GetFollowings() []ModelsFollow {
	if o == nil || IsNil(o.Followings) {
		var ret []ModelsFollow
		return ret
	}
	return o.Followings
}

// GetFollowingsOk returns a tuple with the Followings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetFollowingsOk() ([]ModelsFollow, bool) {
	if o == nil || IsNil(o.Followings) {
		return nil, false
	}
	return o.Followings, true
}

// HasFollowings returns a boolean if a field has been set.
func (o *ModelsUser) HasFollowings() bool {
	if o != nil && !IsNil(o.Followings) {
		return true
	}

	return false
}

// SetFollowings gets a reference to the given []ModelsFollow and assigns it to the Followings field.
func (o *ModelsUser) SetFollowings(v []ModelsFollow) {
	o.Followings = v
}

// GetFollowingsCount returns the FollowingsCount field value if set, zero value otherwise.
func (o *ModelsUser) GetFollowingsCount() int32 {
	if o == nil || IsNil(o.FollowingsCount) {
		var ret int32
		return ret
	}
	return *o.FollowingsCount
}

// GetFollowingsCountOk returns a tuple with the FollowingsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetFollowingsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FollowingsCount) {
		return nil, false
	}
	return o.FollowingsCount, true
}

// HasFollowingsCount returns a boolean if a field has been set.
func (o *ModelsUser) HasFollowingsCount() bool {
	if o != nil && !IsNil(o.FollowingsCount) {
		return true
	}

	return false
}

// SetFollowingsCount gets a reference to the given int32 and assigns it to the FollowingsCount field.
func (o *ModelsUser) SetFollowingsCount(v int32) {
	o.FollowingsCount = &v
}

// GetGithubLink returns the GithubLink field value if set, zero value otherwise.
func (o *ModelsUser) GetGithubLink() string {
	if o == nil || IsNil(o.GithubLink) {
		var ret string
		return ret
	}
	return *o.GithubLink
}

// GetGithubLinkOk returns a tuple with the GithubLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetGithubLinkOk() (*string, bool) {
	if o == nil || IsNil(o.GithubLink) {
		return nil, false
	}
	return o.GithubLink, true
}

// HasGithubLink returns a boolean if a field has been set.
func (o *ModelsUser) HasGithubLink() bool {
	if o != nil && !IsNil(o.GithubLink) {
		return true
	}

	return false
}

// SetGithubLink gets a reference to the given string and assigns it to the GithubLink field.
func (o *ModelsUser) SetGithubLink(v string) {
	o.GithubLink = &v
}

// GetGithubName returns the GithubName field value if set, zero value otherwise.
func (o *ModelsUser) GetGithubName() string {
	if o == nil || IsNil(o.GithubName) {
		var ret string
		return ret
	}
	return *o.GithubName
}

// GetGithubNameOk returns a tuple with the GithubName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetGithubNameOk() (*string, bool) {
	if o == nil || IsNil(o.GithubName) {
		return nil, false
	}
	return o.GithubName, true
}

// HasGithubName returns a boolean if a field has been set.
func (o *ModelsUser) HasGithubName() bool {
	if o != nil && !IsNil(o.GithubName) {
		return true
	}

	return false
}

// SetGithubName gets a reference to the given string and assigns it to the GithubName field.
func (o *ModelsUser) SetGithubName(v string) {
	o.GithubName = &v
}

// GetHomePageName returns the HomePageName field value if set, zero value otherwise.
func (o *ModelsUser) GetHomePageName() string {
	if o == nil || IsNil(o.HomePageName) {
		var ret string
		return ret
	}
	return *o.HomePageName
}

// GetHomePageNameOk returns a tuple with the HomePageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetHomePageNameOk() (*string, bool) {
	if o == nil || IsNil(o.HomePageName) {
		return nil, false
	}
	return o.HomePageName, true
}

// HasHomePageName returns a boolean if a field has been set.
func (o *ModelsUser) HasHomePageName() bool {
	if o != nil && !IsNil(o.HomePageName) {
		return true
	}

	return false
}

// SetHomePageName gets a reference to the given string and assigns it to the HomePageName field.
func (o *ModelsUser) SetHomePageName(v string) {
	o.HomePageName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsUser) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsUser) SetId(v string) {
	o.Id = &v
}

// GetInterests returns the Interests field value if set, zero value otherwise.
func (o *ModelsUser) GetInterests() string {
	if o == nil || IsNil(o.Interests) {
		var ret string
		return ret
	}
	return *o.Interests
}

// GetInterestsOk returns a tuple with the Interests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetInterestsOk() (*string, bool) {
	if o == nil || IsNil(o.Interests) {
		return nil, false
	}
	return o.Interests, true
}

// HasInterests returns a boolean if a field has been set.
func (o *ModelsUser) HasInterests() bool {
	if o != nil && !IsNil(o.Interests) {
		return true
	}

	return false
}

// SetInterests gets a reference to the given string and assigns it to the Interests field.
func (o *ModelsUser) SetInterests(v string) {
	o.Interests = &v
}

// GetInviteOffers returns the InviteOffers field value if set, zero value otherwise.
func (o *ModelsUser) GetInviteOffers() []ModelsOffer {
	if o == nil || IsNil(o.InviteOffers) {
		var ret []ModelsOffer
		return ret
	}
	return o.InviteOffers
}

// GetInviteOffersOk returns a tuple with the InviteOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetInviteOffersOk() ([]ModelsOffer, bool) {
	if o == nil || IsNil(o.InviteOffers) {
		return nil, false
	}
	return o.InviteOffers, true
}

// HasInviteOffers returns a boolean if a field has been set.
func (o *ModelsUser) HasInviteOffers() bool {
	if o != nil && !IsNil(o.InviteOffers) {
		return true
	}

	return false
}

// SetInviteOffers gets a reference to the given []ModelsOffer and assigns it to the InviteOffers field.
func (o *ModelsUser) SetInviteOffers(v []ModelsOffer) {
	o.InviteOffers = v
}

// GetInviteOffersCount returns the InviteOffersCount field value if set, zero value otherwise.
func (o *ModelsUser) GetInviteOffersCount() int32 {
	if o == nil || IsNil(o.InviteOffersCount) {
		var ret int32
		return ret
	}
	return *o.InviteOffersCount
}

// GetInviteOffersCountOk returns a tuple with the InviteOffersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetInviteOffersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InviteOffersCount) {
		return nil, false
	}
	return o.InviteOffersCount, true
}

// HasInviteOffersCount returns a boolean if a field has been set.
func (o *ModelsUser) HasInviteOffersCount() bool {
	if o != nil && !IsNil(o.InviteOffersCount) {
		return true
	}

	return false
}

// SetInviteOffersCount gets a reference to the given int32 and assigns it to the InviteOffersCount field.
func (o *ModelsUser) SetInviteOffersCount(v int32) {
	o.InviteOffersCount = &v
}

// GetIsFollowing returns the IsFollowing field value if set, zero value otherwise.
func (o *ModelsUser) GetIsFollowing() bool {
	if o == nil || IsNil(o.IsFollowing) {
		var ret bool
		return ret
	}
	return *o.IsFollowing
}

// GetIsFollowingOk returns a tuple with the IsFollowing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetIsFollowingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFollowing) {
		return nil, false
	}
	return o.IsFollowing, true
}

// HasIsFollowing returns a boolean if a field has been set.
func (o *ModelsUser) HasIsFollowing() bool {
	if o != nil && !IsNil(o.IsFollowing) {
		return true
	}

	return false
}

// SetIsFollowing gets a reference to the given bool and assigns it to the IsFollowing field.
func (o *ModelsUser) SetIsFollowing(v bool) {
	o.IsFollowing = &v
}

// GetJoinId returns the JoinId field value if set, zero value otherwise.
func (o *ModelsUser) GetJoinId() string {
	if o == nil || IsNil(o.JoinId) {
		var ret string
		return ret
	}
	return *o.JoinId
}

// GetJoinIdOk returns a tuple with the JoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetJoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.JoinId) {
		return nil, false
	}
	return o.JoinId, true
}

// HasJoinId returns a boolean if a field has been set.
func (o *ModelsUser) HasJoinId() bool {
	if o != nil && !IsNil(o.JoinId) {
		return true
	}

	return false
}

// SetJoinId gets a reference to the given string and assigns it to the JoinId field.
func (o *ModelsUser) SetJoinId(v string) {
	o.JoinId = &v
}

// GetJoinOffers returns the JoinOffers field value if set, zero value otherwise.
func (o *ModelsUser) GetJoinOffers() []ModelsOffer {
	if o == nil || IsNil(o.JoinOffers) {
		var ret []ModelsOffer
		return ret
	}
	return o.JoinOffers
}

// GetJoinOffersOk returns a tuple with the JoinOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetJoinOffersOk() ([]ModelsOffer, bool) {
	if o == nil || IsNil(o.JoinOffers) {
		return nil, false
	}
	return o.JoinOffers, true
}

// HasJoinOffers returns a boolean if a field has been set.
func (o *ModelsUser) HasJoinOffers() bool {
	if o != nil && !IsNil(o.JoinOffers) {
		return true
	}

	return false
}

// SetJoinOffers gets a reference to the given []ModelsOffer and assigns it to the JoinOffers field.
func (o *ModelsUser) SetJoinOffers(v []ModelsOffer) {
	o.JoinOffers = v
}

// GetJoinOffersCount returns the JoinOffersCount field value if set, zero value otherwise.
func (o *ModelsUser) GetJoinOffersCount() int32 {
	if o == nil || IsNil(o.JoinOffersCount) {
		var ret int32
		return ret
	}
	return *o.JoinOffersCount
}

// GetJoinOffersCountOk returns a tuple with the JoinOffersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetJoinOffersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.JoinOffersCount) {
		return nil, false
	}
	return o.JoinOffersCount, true
}

// HasJoinOffersCount returns a boolean if a field has been set.
func (o *ModelsUser) HasJoinOffersCount() bool {
	if o != nil && !IsNil(o.JoinOffersCount) {
		return true
	}

	return false
}

// SetJoinOffersCount gets a reference to the given int32 and assigns it to the JoinOffersCount field.
func (o *ModelsUser) SetJoinOffersCount(v int32) {
	o.JoinOffersCount = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *ModelsUser) GetMembers() []ModelsMember {
	if o == nil || IsNil(o.Members) {
		var ret []ModelsMember
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetMembersOk() ([]ModelsMember, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ModelsUser) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []ModelsMember and assigns it to the Members field.
func (o *ModelsUser) SetMembers(v []ModelsMember) {
	o.Members = v
}

// GetMembersCount returns the MembersCount field value if set, zero value otherwise.
func (o *ModelsUser) GetMembersCount() int32 {
	if o == nil || IsNil(o.MembersCount) {
		var ret int32
		return ret
	}
	return *o.MembersCount
}

// GetMembersCountOk returns a tuple with the MembersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetMembersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MembersCount) {
		return nil, false
	}
	return o.MembersCount, true
}

// HasMembersCount returns a boolean if a field has been set.
func (o *ModelsUser) HasMembersCount() bool {
	if o != nil && !IsNil(o.MembersCount) {
		return true
	}

	return false
}

// SetMembersCount gets a reference to the given int32 and assigns it to the MembersCount field.
func (o *ModelsUser) SetMembersCount(v int32) {
	o.MembersCount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsUser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsUser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsUser) SetName(v string) {
	o.Name = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ModelsUser) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ModelsUser) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ModelsUser) SetRole(v string) {
	o.Role = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ModelsUser) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ModelsUser) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ModelsUser) SetToken(v string) {
	o.Token = &v
}

// GetTwitterLink returns the TwitterLink field value if set, zero value otherwise.
func (o *ModelsUser) GetTwitterLink() string {
	if o == nil || IsNil(o.TwitterLink) {
		var ret string
		return ret
	}
	return *o.TwitterLink
}

// GetTwitterLinkOk returns a tuple with the TwitterLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetTwitterLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterLink) {
		return nil, false
	}
	return o.TwitterLink, true
}

// HasTwitterLink returns a boolean if a field has been set.
func (o *ModelsUser) HasTwitterLink() bool {
	if o != nil && !IsNil(o.TwitterLink) {
		return true
	}

	return false
}

// SetTwitterLink gets a reference to the given string and assigns it to the TwitterLink field.
func (o *ModelsUser) SetTwitterLink(v string) {
	o.TwitterLink = &v
}

// GetTwitterName returns the TwitterName field value if set, zero value otherwise.
func (o *ModelsUser) GetTwitterName() string {
	if o == nil || IsNil(o.TwitterName) {
		var ret string
		return ret
	}
	return *o.TwitterName
}

// GetTwitterNameOk returns a tuple with the TwitterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetTwitterNameOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterName) {
		return nil, false
	}
	return o.TwitterName, true
}

// HasTwitterName returns a boolean if a field has been set.
func (o *ModelsUser) HasTwitterName() bool {
	if o != nil && !IsNil(o.TwitterName) {
		return true
	}

	return false
}

// SetTwitterName gets a reference to the given string and assigns it to the TwitterName field.
func (o *ModelsUser) SetTwitterName(v string) {
	o.TwitterName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelsUser) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelsUser) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModelsUser) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModelsUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModelsUser) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModelsUser) SetUsername(v string) {
	o.Username = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *ModelsUser) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *ModelsUser) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *ModelsUser) SetVerified(v bool) {
	o.Verified = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ModelsUser) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ModelsUser) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ModelsUser) SetVisibility(v string) {
	o.Visibility = &v
}

// GetWallet returns the Wallet field value if set, zero value otherwise.
func (o *ModelsUser) GetWallet() ModelsWallet {
	if o == nil || IsNil(o.Wallet) {
		var ret ModelsWallet
		return ret
	}
	return *o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetWalletOk() (*ModelsWallet, bool) {
	if o == nil || IsNil(o.Wallet) {
		return nil, false
	}
	return o.Wallet, true
}

// HasWallet returns a boolean if a field has been set.
func (o *ModelsUser) HasWallet() bool {
	if o != nil && !IsNil(o.Wallet) {
		return true
	}

	return false
}

// SetWallet gets a reference to the given ModelsWallet and assigns it to the Wallet field.
func (o *ModelsUser) SetWallet(v ModelsWallet) {
	o.Wallet = &v
}

// GetWalletAddress returns the WalletAddress field value if set, zero value otherwise.
func (o *ModelsUser) GetWalletAddress() string {
	if o == nil || IsNil(o.WalletAddress) {
		var ret string
		return ret
	}
	return *o.WalletAddress
}

// GetWalletAddressOk returns a tuple with the WalletAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetWalletAddressOk() (*string, bool) {
	if o == nil || IsNil(o.WalletAddress) {
		return nil, false
	}
	return o.WalletAddress, true
}

// HasWalletAddress returns a boolean if a field has been set.
func (o *ModelsUser) HasWalletAddress() bool {
	if o != nil && !IsNil(o.WalletAddress) {
		return true
	}

	return false
}

// SetWalletAddress gets a reference to the given string and assigns it to the WalletAddress field.
func (o *ModelsUser) SetWalletAddress(v string) {
	o.WalletAddress = &v
}

// GetWalletConnection returns the WalletConnection field value if set, zero value otherwise.
func (o *ModelsUser) GetWalletConnection() string {
	if o == nil || IsNil(o.WalletConnection) {
		var ret string
		return ret
	}
	return *o.WalletConnection
}

// GetWalletConnectionOk returns a tuple with the WalletConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUser) GetWalletConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.WalletConnection) {
		return nil, false
	}
	return o.WalletConnection, true
}

// HasWalletConnection returns a boolean if a field has been set.
func (o *ModelsUser) HasWalletConnection() bool {
	if o != nil && !IsNil(o.WalletConnection) {
		return true
	}

	return false
}

// SetWalletConnection gets a reference to the given string and assigns it to the WalletConnection field.
func (o *ModelsUser) SetWalletConnection(v string) {
	o.WalletConnection = &v
}

func (o ModelsUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowRequestToJoin) {
		toSerialize["allow_request_to_join"] = o.AllowRequestToJoin
	}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.Bio) {
		toSerialize["bio"] = o.Bio
	}
	if !IsNil(o.Blocked) {
		toSerialize["blocked"] = o.Blocked
	}
	if !IsNil(o.BlockedAt) {
		toSerialize["blocked_at"] = o.BlockedAt
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Followers) {
		toSerialize["followers"] = o.Followers
	}
	if !IsNil(o.FollowersCount) {
		toSerialize["followers_count"] = o.FollowersCount
	}
	if !IsNil(o.Followings) {
		toSerialize["followings"] = o.Followings
	}
	if !IsNil(o.FollowingsCount) {
		toSerialize["followings_count"] = o.FollowingsCount
	}
	if !IsNil(o.GithubLink) {
		toSerialize["github_link"] = o.GithubLink
	}
	if !IsNil(o.GithubName) {
		toSerialize["github_name"] = o.GithubName
	}
	if !IsNil(o.HomePageName) {
		toSerialize["home_page_name"] = o.HomePageName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Interests) {
		toSerialize["interests"] = o.Interests
	}
	if !IsNil(o.InviteOffers) {
		toSerialize["invite_offers"] = o.InviteOffers
	}
	if !IsNil(o.InviteOffersCount) {
		toSerialize["invite_offers_count"] = o.InviteOffersCount
	}
	if !IsNil(o.IsFollowing) {
		toSerialize["is_following"] = o.IsFollowing
	}
	if !IsNil(o.JoinId) {
		toSerialize["join_id"] = o.JoinId
	}
	if !IsNil(o.JoinOffers) {
		toSerialize["join_offers"] = o.JoinOffers
	}
	if !IsNil(o.JoinOffersCount) {
		toSerialize["join_offers_count"] = o.JoinOffersCount
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.MembersCount) {
		toSerialize["members_count"] = o.MembersCount
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.TwitterLink) {
		toSerialize["twitter_link"] = o.TwitterLink
	}
	if !IsNil(o.TwitterName) {
		toSerialize["twitter_name"] = o.TwitterName
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Wallet) {
		toSerialize["wallet"] = o.Wallet
	}
	if !IsNil(o.WalletAddress) {
		toSerialize["wallet_address"] = o.WalletAddress
	}
	if !IsNil(o.WalletConnection) {
		toSerialize["wallet_connection"] = o.WalletConnection
	}
	return toSerialize, nil
}

type NullableModelsUser struct {
	value *ModelsUser
	isSet bool
}

func (v NullableModelsUser) Get() *ModelsUser {
	return v.value
}

func (v *NullableModelsUser) Set(val *ModelsUser) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsUser) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsUser(val *ModelsUser) *NullableModelsUser {
	return &NullableModelsUser{value: val, isSet: true}
}

func (v NullableModelsUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


