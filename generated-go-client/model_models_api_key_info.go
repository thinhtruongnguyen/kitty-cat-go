/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsApiKeyInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsApiKeyInfo{}

// ModelsApiKeyInfo struct for ModelsApiKeyInfo
type ModelsApiKeyInfo struct {
	ApiPrice *float32 `json:"api_price,omitempty"`
	CommitHash *string `json:"commit_hash,omitempty"`
	InputFormat map[string]interface{} `json:"input_format,omitempty"`
	ModelDescription *string `json:"model_description,omitempty"`
	ModelId *string `json:"model_id,omitempty"`
	OutputFormat map[string]interface{} `json:"output_format,omitempty"`
}

// NewModelsApiKeyInfo instantiates a new ModelsApiKeyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsApiKeyInfo() *ModelsApiKeyInfo {
	this := ModelsApiKeyInfo{}
	return &this
}

// NewModelsApiKeyInfoWithDefaults instantiates a new ModelsApiKeyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsApiKeyInfoWithDefaults() *ModelsApiKeyInfo {
	this := ModelsApiKeyInfo{}
	return &this
}

// GetApiPrice returns the ApiPrice field value if set, zero value otherwise.
func (o *ModelsApiKeyInfo) GetApiPrice() float32 {
	if o == nil || IsNil(o.ApiPrice) {
		var ret float32
		return ret
	}
	return *o.ApiPrice
}

// GetApiPriceOk returns a tuple with the ApiPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyInfo) GetApiPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ApiPrice) {
		return nil, false
	}
	return o.ApiPrice, true
}

// HasApiPrice returns a boolean if a field has been set.
func (o *ModelsApiKeyInfo) HasApiPrice() bool {
	if o != nil && !IsNil(o.ApiPrice) {
		return true
	}

	return false
}

// SetApiPrice gets a reference to the given float32 and assigns it to the ApiPrice field.
func (o *ModelsApiKeyInfo) SetApiPrice(v float32) {
	o.ApiPrice = &v
}

// GetCommitHash returns the CommitHash field value if set, zero value otherwise.
func (o *ModelsApiKeyInfo) GetCommitHash() string {
	if o == nil || IsNil(o.CommitHash) {
		var ret string
		return ret
	}
	return *o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyInfo) GetCommitHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitHash) {
		return nil, false
	}
	return o.CommitHash, true
}

// HasCommitHash returns a boolean if a field has been set.
func (o *ModelsApiKeyInfo) HasCommitHash() bool {
	if o != nil && !IsNil(o.CommitHash) {
		return true
	}

	return false
}

// SetCommitHash gets a reference to the given string and assigns it to the CommitHash field.
func (o *ModelsApiKeyInfo) SetCommitHash(v string) {
	o.CommitHash = &v
}

// GetInputFormat returns the InputFormat field value if set, zero value otherwise.
func (o *ModelsApiKeyInfo) GetInputFormat() map[string]interface{} {
	if o == nil || IsNil(o.InputFormat) {
		var ret map[string]interface{}
		return ret
	}
	return o.InputFormat
}

// GetInputFormatOk returns a tuple with the InputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyInfo) GetInputFormatOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InputFormat) {
		return map[string]interface{}{}, false
	}
	return o.InputFormat, true
}

// HasInputFormat returns a boolean if a field has been set.
func (o *ModelsApiKeyInfo) HasInputFormat() bool {
	if o != nil && !IsNil(o.InputFormat) {
		return true
	}

	return false
}

// SetInputFormat gets a reference to the given map[string]interface{} and assigns it to the InputFormat field.
func (o *ModelsApiKeyInfo) SetInputFormat(v map[string]interface{}) {
	o.InputFormat = v
}

// GetModelDescription returns the ModelDescription field value if set, zero value otherwise.
func (o *ModelsApiKeyInfo) GetModelDescription() string {
	if o == nil || IsNil(o.ModelDescription) {
		var ret string
		return ret
	}
	return *o.ModelDescription
}

// GetModelDescriptionOk returns a tuple with the ModelDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyInfo) GetModelDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ModelDescription) {
		return nil, false
	}
	return o.ModelDescription, true
}

// HasModelDescription returns a boolean if a field has been set.
func (o *ModelsApiKeyInfo) HasModelDescription() bool {
	if o != nil && !IsNil(o.ModelDescription) {
		return true
	}

	return false
}

// SetModelDescription gets a reference to the given string and assigns it to the ModelDescription field.
func (o *ModelsApiKeyInfo) SetModelDescription(v string) {
	o.ModelDescription = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *ModelsApiKeyInfo) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyInfo) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *ModelsApiKeyInfo) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *ModelsApiKeyInfo) SetModelId(v string) {
	o.ModelId = &v
}

// GetOutputFormat returns the OutputFormat field value if set, zero value otherwise.
func (o *ModelsApiKeyInfo) GetOutputFormat() map[string]interface{} {
	if o == nil || IsNil(o.OutputFormat) {
		var ret map[string]interface{}
		return ret
	}
	return o.OutputFormat
}

// GetOutputFormatOk returns a tuple with the OutputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsApiKeyInfo) GetOutputFormatOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OutputFormat) {
		return map[string]interface{}{}, false
	}
	return o.OutputFormat, true
}

// HasOutputFormat returns a boolean if a field has been set.
func (o *ModelsApiKeyInfo) HasOutputFormat() bool {
	if o != nil && !IsNil(o.OutputFormat) {
		return true
	}

	return false
}

// SetOutputFormat gets a reference to the given map[string]interface{} and assigns it to the OutputFormat field.
func (o *ModelsApiKeyInfo) SetOutputFormat(v map[string]interface{}) {
	o.OutputFormat = v
}

func (o ModelsApiKeyInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsApiKeyInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiPrice) {
		toSerialize["api_price"] = o.ApiPrice
	}
	if !IsNil(o.CommitHash) {
		toSerialize["commit_hash"] = o.CommitHash
	}
	if !IsNil(o.InputFormat) {
		toSerialize["input_format"] = o.InputFormat
	}
	if !IsNil(o.ModelDescription) {
		toSerialize["model_description"] = o.ModelDescription
	}
	if !IsNil(o.ModelId) {
		toSerialize["model_id"] = o.ModelId
	}
	if !IsNil(o.OutputFormat) {
		toSerialize["output_format"] = o.OutputFormat
	}
	return toSerialize, nil
}

type NullableModelsApiKeyInfo struct {
	value *ModelsApiKeyInfo
	isSet bool
}

func (v NullableModelsApiKeyInfo) Get() *ModelsApiKeyInfo {
	return v.value
}

func (v *NullableModelsApiKeyInfo) Set(val *ModelsApiKeyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsApiKeyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsApiKeyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsApiKeyInfo(val *ModelsApiKeyInfo) *NullableModelsApiKeyInfo {
	return &NullableModelsApiKeyInfo{value: val, isSet: true}
}

func (v NullableModelsApiKeyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsApiKeyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


