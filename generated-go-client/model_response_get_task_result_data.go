/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ResponseGetTaskResultData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseGetTaskResultData{}

// ResponseGetTaskResultData struct for ResponseGetTaskResultData
type ResponseGetTaskResultData struct {
	Result *ResponseResult `json:"result,omitempty"`
	Status *string `json:"status,omitempty"`
	Success *bool `json:"success,omitempty"`
	Traceback *string `json:"traceback,omitempty"`
}

// NewResponseGetTaskResultData instantiates a new ResponseGetTaskResultData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseGetTaskResultData() *ResponseGetTaskResultData {
	this := ResponseGetTaskResultData{}
	return &this
}

// NewResponseGetTaskResultDataWithDefaults instantiates a new ResponseGetTaskResultData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseGetTaskResultDataWithDefaults() *ResponseGetTaskResultData {
	this := ResponseGetTaskResultData{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ResponseGetTaskResultData) GetResult() ResponseResult {
	if o == nil || IsNil(o.Result) {
		var ret ResponseResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetTaskResultData) GetResultOk() (*ResponseResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ResponseGetTaskResultData) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ResponseResult and assigns it to the Result field.
func (o *ResponseGetTaskResultData) SetResult(v ResponseResult) {
	o.Result = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResponseGetTaskResultData) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetTaskResultData) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResponseGetTaskResultData) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ResponseGetTaskResultData) SetStatus(v string) {
	o.Status = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ResponseGetTaskResultData) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetTaskResultData) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ResponseGetTaskResultData) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ResponseGetTaskResultData) SetSuccess(v bool) {
	o.Success = &v
}

// GetTraceback returns the Traceback field value if set, zero value otherwise.
func (o *ResponseGetTaskResultData) GetTraceback() string {
	if o == nil || IsNil(o.Traceback) {
		var ret string
		return ret
	}
	return *o.Traceback
}

// GetTracebackOk returns a tuple with the Traceback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseGetTaskResultData) GetTracebackOk() (*string, bool) {
	if o == nil || IsNil(o.Traceback) {
		return nil, false
	}
	return o.Traceback, true
}

// HasTraceback returns a boolean if a field has been set.
func (o *ResponseGetTaskResultData) HasTraceback() bool {
	if o != nil && !IsNil(o.Traceback) {
		return true
	}

	return false
}

// SetTraceback gets a reference to the given string and assigns it to the Traceback field.
func (o *ResponseGetTaskResultData) SetTraceback(v string) {
	o.Traceback = &v
}

func (o ResponseGetTaskResultData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseGetTaskResultData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Traceback) {
		toSerialize["traceback"] = o.Traceback
	}
	return toSerialize, nil
}

type NullableResponseGetTaskResultData struct {
	value *ResponseGetTaskResultData
	isSet bool
}

func (v NullableResponseGetTaskResultData) Get() *ResponseGetTaskResultData {
	return v.value
}

func (v *NullableResponseGetTaskResultData) Set(val *ResponseGetTaskResultData) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseGetTaskResultData) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseGetTaskResultData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseGetTaskResultData(val *ResponseGetTaskResultData) *NullableResponseGetTaskResultData {
	return &NullableResponseGetTaskResultData{value: val, isSet: true}
}

func (v NullableResponseGetTaskResultData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseGetTaskResultData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


