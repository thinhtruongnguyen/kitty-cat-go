/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsModelVersioningGroupLite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsModelVersioningGroupLite{}

// ModelsModelVersioningGroupLite struct for ModelsModelVersioningGroupLite
type ModelsModelVersioningGroupLite struct {
	// Dependency        map[string]interface{} `json:\"dependency\"`
	CommitHash *string `json:"commit_hash,omitempty"`
	// TestResult        map[string]interface{} `json:\"test_result\"` InputFormat       map[string]interface{} `json:\"input_format\"` OutputFormat      map[string]interface{} `json:\"output_format\"` SysRequired       map[string]interface{} `json:\"sys_require\"`
	CommitMessage *string `json:"commit_message,omitempty"`
	IsActive *bool `json:"is_active,omitempty"`
	LastCheckedAt *string `json:"last_checked_at,omitempty"`
	ModelId *string `json:"model_id,omitempty"`
	PendingPlatforms []ModelsPlatformTask `json:"pending_platforms,omitempty"`
	RejectedPlatforms []ModelsPlatformTask `json:"rejected_platforms,omitempty"`
	VerifiedPlatforms []ModelsPlatformTask `json:"verified_platforms,omitempty"`
	VerifyStatus *string `json:"verify_status,omitempty"`
}

// NewModelsModelVersioningGroupLite instantiates a new ModelsModelVersioningGroupLite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsModelVersioningGroupLite() *ModelsModelVersioningGroupLite {
	this := ModelsModelVersioningGroupLite{}
	return &this
}

// NewModelsModelVersioningGroupLiteWithDefaults instantiates a new ModelsModelVersioningGroupLite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsModelVersioningGroupLiteWithDefaults() *ModelsModelVersioningGroupLite {
	this := ModelsModelVersioningGroupLite{}
	return &this
}

// GetCommitHash returns the CommitHash field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetCommitHash() string {
	if o == nil || IsNil(o.CommitHash) {
		var ret string
		return ret
	}
	return *o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetCommitHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitHash) {
		return nil, false
	}
	return o.CommitHash, true
}

// HasCommitHash returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasCommitHash() bool {
	if o != nil && !IsNil(o.CommitHash) {
		return true
	}

	return false
}

// SetCommitHash gets a reference to the given string and assigns it to the CommitHash field.
func (o *ModelsModelVersioningGroupLite) SetCommitHash(v string) {
	o.CommitHash = &v
}

// GetCommitMessage returns the CommitMessage field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetCommitMessage() string {
	if o == nil || IsNil(o.CommitMessage) {
		var ret string
		return ret
	}
	return *o.CommitMessage
}

// GetCommitMessageOk returns a tuple with the CommitMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetCommitMessageOk() (*string, bool) {
	if o == nil || IsNil(o.CommitMessage) {
		return nil, false
	}
	return o.CommitMessage, true
}

// HasCommitMessage returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasCommitMessage() bool {
	if o != nil && !IsNil(o.CommitMessage) {
		return true
	}

	return false
}

// SetCommitMessage gets a reference to the given string and assigns it to the CommitMessage field.
func (o *ModelsModelVersioningGroupLite) SetCommitMessage(v string) {
	o.CommitMessage = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ModelsModelVersioningGroupLite) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetLastCheckedAt returns the LastCheckedAt field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetLastCheckedAt() string {
	if o == nil || IsNil(o.LastCheckedAt) {
		var ret string
		return ret
	}
	return *o.LastCheckedAt
}

// GetLastCheckedAtOk returns a tuple with the LastCheckedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetLastCheckedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastCheckedAt) {
		return nil, false
	}
	return o.LastCheckedAt, true
}

// HasLastCheckedAt returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasLastCheckedAt() bool {
	if o != nil && !IsNil(o.LastCheckedAt) {
		return true
	}

	return false
}

// SetLastCheckedAt gets a reference to the given string and assigns it to the LastCheckedAt field.
func (o *ModelsModelVersioningGroupLite) SetLastCheckedAt(v string) {
	o.LastCheckedAt = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *ModelsModelVersioningGroupLite) SetModelId(v string) {
	o.ModelId = &v
}

// GetPendingPlatforms returns the PendingPlatforms field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetPendingPlatforms() []ModelsPlatformTask {
	if o == nil || IsNil(o.PendingPlatforms) {
		var ret []ModelsPlatformTask
		return ret
	}
	return o.PendingPlatforms
}

// GetPendingPlatformsOk returns a tuple with the PendingPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetPendingPlatformsOk() ([]ModelsPlatformTask, bool) {
	if o == nil || IsNil(o.PendingPlatforms) {
		return nil, false
	}
	return o.PendingPlatforms, true
}

// HasPendingPlatforms returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasPendingPlatforms() bool {
	if o != nil && !IsNil(o.PendingPlatforms) {
		return true
	}

	return false
}

// SetPendingPlatforms gets a reference to the given []ModelsPlatformTask and assigns it to the PendingPlatforms field.
func (o *ModelsModelVersioningGroupLite) SetPendingPlatforms(v []ModelsPlatformTask) {
	o.PendingPlatforms = v
}

// GetRejectedPlatforms returns the RejectedPlatforms field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetRejectedPlatforms() []ModelsPlatformTask {
	if o == nil || IsNil(o.RejectedPlatforms) {
		var ret []ModelsPlatformTask
		return ret
	}
	return o.RejectedPlatforms
}

// GetRejectedPlatformsOk returns a tuple with the RejectedPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetRejectedPlatformsOk() ([]ModelsPlatformTask, bool) {
	if o == nil || IsNil(o.RejectedPlatforms) {
		return nil, false
	}
	return o.RejectedPlatforms, true
}

// HasRejectedPlatforms returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasRejectedPlatforms() bool {
	if o != nil && !IsNil(o.RejectedPlatforms) {
		return true
	}

	return false
}

// SetRejectedPlatforms gets a reference to the given []ModelsPlatformTask and assigns it to the RejectedPlatforms field.
func (o *ModelsModelVersioningGroupLite) SetRejectedPlatforms(v []ModelsPlatformTask) {
	o.RejectedPlatforms = v
}

// GetVerifiedPlatforms returns the VerifiedPlatforms field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetVerifiedPlatforms() []ModelsPlatformTask {
	if o == nil || IsNil(o.VerifiedPlatforms) {
		var ret []ModelsPlatformTask
		return ret
	}
	return o.VerifiedPlatforms
}

// GetVerifiedPlatformsOk returns a tuple with the VerifiedPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetVerifiedPlatformsOk() ([]ModelsPlatformTask, bool) {
	if o == nil || IsNil(o.VerifiedPlatforms) {
		return nil, false
	}
	return o.VerifiedPlatforms, true
}

// HasVerifiedPlatforms returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasVerifiedPlatforms() bool {
	if o != nil && !IsNil(o.VerifiedPlatforms) {
		return true
	}

	return false
}

// SetVerifiedPlatforms gets a reference to the given []ModelsPlatformTask and assigns it to the VerifiedPlatforms field.
func (o *ModelsModelVersioningGroupLite) SetVerifiedPlatforms(v []ModelsPlatformTask) {
	o.VerifiedPlatforms = v
}

// GetVerifyStatus returns the VerifyStatus field value if set, zero value otherwise.
func (o *ModelsModelVersioningGroupLite) GetVerifyStatus() string {
	if o == nil || IsNil(o.VerifyStatus) {
		var ret string
		return ret
	}
	return *o.VerifyStatus
}

// GetVerifyStatusOk returns a tuple with the VerifyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsModelVersioningGroupLite) GetVerifyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyStatus) {
		return nil, false
	}
	return o.VerifyStatus, true
}

// HasVerifyStatus returns a boolean if a field has been set.
func (o *ModelsModelVersioningGroupLite) HasVerifyStatus() bool {
	if o != nil && !IsNil(o.VerifyStatus) {
		return true
	}

	return false
}

// SetVerifyStatus gets a reference to the given string and assigns it to the VerifyStatus field.
func (o *ModelsModelVersioningGroupLite) SetVerifyStatus(v string) {
	o.VerifyStatus = &v
}

func (o ModelsModelVersioningGroupLite) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsModelVersioningGroupLite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommitHash) {
		toSerialize["commit_hash"] = o.CommitHash
	}
	if !IsNil(o.CommitMessage) {
		toSerialize["commit_message"] = o.CommitMessage
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	if !IsNil(o.LastCheckedAt) {
		toSerialize["last_checked_at"] = o.LastCheckedAt
	}
	if !IsNil(o.ModelId) {
		toSerialize["model_id"] = o.ModelId
	}
	if !IsNil(o.PendingPlatforms) {
		toSerialize["pending_platforms"] = o.PendingPlatforms
	}
	if !IsNil(o.RejectedPlatforms) {
		toSerialize["rejected_platforms"] = o.RejectedPlatforms
	}
	if !IsNil(o.VerifiedPlatforms) {
		toSerialize["verified_platforms"] = o.VerifiedPlatforms
	}
	if !IsNil(o.VerifyStatus) {
		toSerialize["verify_status"] = o.VerifyStatus
	}
	return toSerialize, nil
}

type NullableModelsModelVersioningGroupLite struct {
	value *ModelsModelVersioningGroupLite
	isSet bool
}

func (v NullableModelsModelVersioningGroupLite) Get() *ModelsModelVersioningGroupLite {
	return v.value
}

func (v *NullableModelsModelVersioningGroupLite) Set(val *ModelsModelVersioningGroupLite) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsModelVersioningGroupLite) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsModelVersioningGroupLite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsModelVersioningGroupLite(val *ModelsModelVersioningGroupLite) *NullableModelsModelVersioningGroupLite {
	return &NullableModelsModelVersioningGroupLite{value: val, isSet: true}
}

func (v NullableModelsModelVersioningGroupLite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsModelVersioningGroupLite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


