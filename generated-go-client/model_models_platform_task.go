/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsPlatformTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPlatformTask{}

// ModelsPlatformTask struct for ModelsPlatformTask
type ModelsPlatformTask struct {
	Platform *string `json:"platform,omitempty"`
	TestResult map[string]interface{} `json:"test_result,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	VerifyTaskId *string `json:"verify_task_id,omitempty"`
}

// NewModelsPlatformTask instantiates a new ModelsPlatformTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPlatformTask() *ModelsPlatformTask {
	this := ModelsPlatformTask{}
	return &this
}

// NewModelsPlatformTaskWithDefaults instantiates a new ModelsPlatformTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPlatformTaskWithDefaults() *ModelsPlatformTask {
	this := ModelsPlatformTask{}
	return &this
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ModelsPlatformTask) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPlatformTask) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ModelsPlatformTask) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *ModelsPlatformTask) SetPlatform(v string) {
	o.Platform = &v
}

// GetTestResult returns the TestResult field value if set, zero value otherwise.
func (o *ModelsPlatformTask) GetTestResult() map[string]interface{} {
	if o == nil || IsNil(o.TestResult) {
		var ret map[string]interface{}
		return ret
	}
	return o.TestResult
}

// GetTestResultOk returns a tuple with the TestResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPlatformTask) GetTestResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TestResult) {
		return map[string]interface{}{}, false
	}
	return o.TestResult, true
}

// HasTestResult returns a boolean if a field has been set.
func (o *ModelsPlatformTask) HasTestResult() bool {
	if o != nil && !IsNil(o.TestResult) {
		return true
	}

	return false
}

// SetTestResult gets a reference to the given map[string]interface{} and assigns it to the TestResult field.
func (o *ModelsPlatformTask) SetTestResult(v map[string]interface{}) {
	o.TestResult = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsPlatformTask) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPlatformTask) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsPlatformTask) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsPlatformTask) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVerifyTaskId returns the VerifyTaskId field value if set, zero value otherwise.
func (o *ModelsPlatformTask) GetVerifyTaskId() string {
	if o == nil || IsNil(o.VerifyTaskId) {
		var ret string
		return ret
	}
	return *o.VerifyTaskId
}

// GetVerifyTaskIdOk returns a tuple with the VerifyTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPlatformTask) GetVerifyTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyTaskId) {
		return nil, false
	}
	return o.VerifyTaskId, true
}

// HasVerifyTaskId returns a boolean if a field has been set.
func (o *ModelsPlatformTask) HasVerifyTaskId() bool {
	if o != nil && !IsNil(o.VerifyTaskId) {
		return true
	}

	return false
}

// SetVerifyTaskId gets a reference to the given string and assigns it to the VerifyTaskId field.
func (o *ModelsPlatformTask) SetVerifyTaskId(v string) {
	o.VerifyTaskId = &v
}

func (o ModelsPlatformTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPlatformTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.TestResult) {
		toSerialize["test_result"] = o.TestResult
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.VerifyTaskId) {
		toSerialize["verify_task_id"] = o.VerifyTaskId
	}
	return toSerialize, nil
}

type NullableModelsPlatformTask struct {
	value *ModelsPlatformTask
	isSet bool
}

func (v NullableModelsPlatformTask) Get() *ModelsPlatformTask {
	return v.value
}

func (v *NullableModelsPlatformTask) Set(val *ModelsPlatformTask) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPlatformTask) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPlatformTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPlatformTask(val *ModelsPlatformTask) *NullableModelsPlatformTask {
	return &NullableModelsPlatformTask{value: val, isSet: true}
}

func (v NullableModelsPlatformTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPlatformTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


