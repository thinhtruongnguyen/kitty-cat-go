/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsOffer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsOffer{}

// ModelsOffer struct for ModelsOffer
type ModelsOffer struct {
	CreatedAt *int32 `json:"created_at,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	ExpAt *int32 `json:"exp_at,omitempty"`
	Id *string `json:"id,omitempty"`
	OrgUsername *string `json:"org_username,omitempty"`
	Role *string `json:"role,omitempty"`
	Type *string `json:"type,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewModelsOffer instantiates a new ModelsOffer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsOffer() *ModelsOffer {
	this := ModelsOffer{}
	return &this
}

// NewModelsOfferWithDefaults instantiates a new ModelsOffer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsOfferWithDefaults() *ModelsOffer {
	this := ModelsOffer{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsOffer) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsOffer) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ModelsOffer) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ModelsOffer) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ModelsOffer) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *ModelsOffer) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetExpAt returns the ExpAt field value if set, zero value otherwise.
func (o *ModelsOffer) GetExpAt() int32 {
	if o == nil || IsNil(o.ExpAt) {
		var ret int32
		return ret
	}
	return *o.ExpAt
}

// GetExpAtOk returns a tuple with the ExpAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetExpAtOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpAt) {
		return nil, false
	}
	return o.ExpAt, true
}

// HasExpAt returns a boolean if a field has been set.
func (o *ModelsOffer) HasExpAt() bool {
	if o != nil && !IsNil(o.ExpAt) {
		return true
	}

	return false
}

// SetExpAt gets a reference to the given int32 and assigns it to the ExpAt field.
func (o *ModelsOffer) SetExpAt(v int32) {
	o.ExpAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsOffer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsOffer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsOffer) SetId(v string) {
	o.Id = &v
}

// GetOrgUsername returns the OrgUsername field value if set, zero value otherwise.
func (o *ModelsOffer) GetOrgUsername() string {
	if o == nil || IsNil(o.OrgUsername) {
		var ret string
		return ret
	}
	return *o.OrgUsername
}

// GetOrgUsernameOk returns a tuple with the OrgUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetOrgUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUsername) {
		return nil, false
	}
	return o.OrgUsername, true
}

// HasOrgUsername returns a boolean if a field has been set.
func (o *ModelsOffer) HasOrgUsername() bool {
	if o != nil && !IsNil(o.OrgUsername) {
		return true
	}

	return false
}

// SetOrgUsername gets a reference to the given string and assigns it to the OrgUsername field.
func (o *ModelsOffer) SetOrgUsername(v string) {
	o.OrgUsername = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ModelsOffer) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ModelsOffer) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ModelsOffer) SetRole(v string) {
	o.Role = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelsOffer) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelsOffer) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModelsOffer) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModelsOffer) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOffer) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModelsOffer) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModelsOffer) SetUsername(v string) {
	o.Username = &v
}

func (o ModelsOffer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsOffer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.ExpAt) {
		toSerialize["exp_at"] = o.ExpAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrgUsername) {
		toSerialize["org_username"] = o.OrgUsername
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableModelsOffer struct {
	value *ModelsOffer
	isSet bool
}

func (v NullableModelsOffer) Get() *ModelsOffer {
	return v.value
}

func (v *NullableModelsOffer) Set(val *ModelsOffer) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsOffer) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsOffer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsOffer(val *ModelsOffer) *NullableModelsOffer {
	return &NullableModelsOffer{value: val, isSet: true}
}

func (v NullableModelsOffer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsOffer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


