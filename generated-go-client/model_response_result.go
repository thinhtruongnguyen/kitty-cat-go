/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseResult{}

// ResponseResult struct for ResponseResult
type ResponseResult struct {
	TLogs *string `json:"_t_logs,omitempty"`
	Output *string `json:"output,omitempty"`
}

// NewResponseResult instantiates a new ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseResult() *ResponseResult {
	this := ResponseResult{}
	return &this
}

// NewResponseResultWithDefaults instantiates a new ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseResultWithDefaults() *ResponseResult {
	this := ResponseResult{}
	return &this
}

// GetTLogs returns the TLogs field value if set, zero value otherwise.
func (o *ResponseResult) GetTLogs() string {
	if o == nil || IsNil(o.TLogs) {
		var ret string
		return ret
	}
	return *o.TLogs
}

// GetTLogsOk returns a tuple with the TLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseResult) GetTLogsOk() (*string, bool) {
	if o == nil || IsNil(o.TLogs) {
		return nil, false
	}
	return o.TLogs, true
}

// HasTLogs returns a boolean if a field has been set.
func (o *ResponseResult) HasTLogs() bool {
	if o != nil && !IsNil(o.TLogs) {
		return true
	}

	return false
}

// SetTLogs gets a reference to the given string and assigns it to the TLogs field.
func (o *ResponseResult) SetTLogs(v string) {
	o.TLogs = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *ResponseResult) GetOutput() string {
	if o == nil || IsNil(o.Output) {
		var ret string
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseResult) GetOutputOk() (*string, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *ResponseResult) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given string and assigns it to the Output field.
func (o *ResponseResult) SetOutput(v string) {
	o.Output = &v
}

func (o ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TLogs) {
		toSerialize["_t_logs"] = o.TLogs
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	return toSerialize, nil
}

type NullableResponseResult struct {
	value *ResponseResult
	isSet bool
}

func (v NullableResponseResult) Get() *ResponseResult {
	return v.value
}

func (v *NullableResponseResult) Set(val *ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseResult(val *ResponseResult) *NullableResponseResult {
	return &NullableResponseResult{value: val, isSet: true}
}

func (v NullableResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


