/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
)

// checks if the ModelsWallet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsWallet{}

// ModelsWallet struct for ModelsWallet
type ModelsWallet struct {
	Balance *float32 `json:"balance,omitempty"`
	Debt *float32 `json:"debt,omitempty"`
	Earnings *float32 `json:"earnings,omitempty"`
	FreeBalance *float32 `json:"free_balance,omitempty"`
}

// NewModelsWallet instantiates a new ModelsWallet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsWallet() *ModelsWallet {
	this := ModelsWallet{}
	return &this
}

// NewModelsWalletWithDefaults instantiates a new ModelsWallet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsWalletWithDefaults() *ModelsWallet {
	this := ModelsWallet{}
	return &this
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *ModelsWallet) GetBalance() float32 {
	if o == nil || IsNil(o.Balance) {
		var ret float32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWallet) GetBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *ModelsWallet) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float32 and assigns it to the Balance field.
func (o *ModelsWallet) SetBalance(v float32) {
	o.Balance = &v
}

// GetDebt returns the Debt field value if set, zero value otherwise.
func (o *ModelsWallet) GetDebt() float32 {
	if o == nil || IsNil(o.Debt) {
		var ret float32
		return ret
	}
	return *o.Debt
}

// GetDebtOk returns a tuple with the Debt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWallet) GetDebtOk() (*float32, bool) {
	if o == nil || IsNil(o.Debt) {
		return nil, false
	}
	return o.Debt, true
}

// HasDebt returns a boolean if a field has been set.
func (o *ModelsWallet) HasDebt() bool {
	if o != nil && !IsNil(o.Debt) {
		return true
	}

	return false
}

// SetDebt gets a reference to the given float32 and assigns it to the Debt field.
func (o *ModelsWallet) SetDebt(v float32) {
	o.Debt = &v
}

// GetEarnings returns the Earnings field value if set, zero value otherwise.
func (o *ModelsWallet) GetEarnings() float32 {
	if o == nil || IsNil(o.Earnings) {
		var ret float32
		return ret
	}
	return *o.Earnings
}

// GetEarningsOk returns a tuple with the Earnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWallet) GetEarningsOk() (*float32, bool) {
	if o == nil || IsNil(o.Earnings) {
		return nil, false
	}
	return o.Earnings, true
}

// HasEarnings returns a boolean if a field has been set.
func (o *ModelsWallet) HasEarnings() bool {
	if o != nil && !IsNil(o.Earnings) {
		return true
	}

	return false
}

// SetEarnings gets a reference to the given float32 and assigns it to the Earnings field.
func (o *ModelsWallet) SetEarnings(v float32) {
	o.Earnings = &v
}

// GetFreeBalance returns the FreeBalance field value if set, zero value otherwise.
func (o *ModelsWallet) GetFreeBalance() float32 {
	if o == nil || IsNil(o.FreeBalance) {
		var ret float32
		return ret
	}
	return *o.FreeBalance
}

// GetFreeBalanceOk returns a tuple with the FreeBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWallet) GetFreeBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.FreeBalance) {
		return nil, false
	}
	return o.FreeBalance, true
}

// HasFreeBalance returns a boolean if a field has been set.
func (o *ModelsWallet) HasFreeBalance() bool {
	if o != nil && !IsNil(o.FreeBalance) {
		return true
	}

	return false
}

// SetFreeBalance gets a reference to the given float32 and assigns it to the FreeBalance field.
func (o *ModelsWallet) SetFreeBalance(v float32) {
	o.FreeBalance = &v
}

func (o ModelsWallet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsWallet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.Debt) {
		toSerialize["debt"] = o.Debt
	}
	if !IsNil(o.Earnings) {
		toSerialize["earnings"] = o.Earnings
	}
	if !IsNil(o.FreeBalance) {
		toSerialize["free_balance"] = o.FreeBalance
	}
	return toSerialize, nil
}

type NullableModelsWallet struct {
	value *ModelsWallet
	isSet bool
}

func (v NullableModelsWallet) Get() *ModelsWallet {
	return v.value
}

func (v *NullableModelsWallet) Set(val *ModelsWallet) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsWallet) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsWallet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsWallet(val *ModelsWallet) *NullableModelsWallet {
	return &NullableModelsWallet{value: val, isSet: true}
}

func (v NullableModelsWallet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsWallet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


