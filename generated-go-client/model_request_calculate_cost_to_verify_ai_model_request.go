/*
AIOZ-AI-PLATFORM API

API for AIOZ AI Platform

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package myclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestCalculateCostToVerifyAiModelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestCalculateCostToVerifyAiModelRequest{}

// RequestCalculateCostToVerifyAiModelRequest struct for RequestCalculateCostToVerifyAiModelRequest
type RequestCalculateCostToVerifyAiModelRequest struct {
	CommitHash string `json:"commit_hash"`
	Platforms []string `json:"platforms"`
}

type _RequestCalculateCostToVerifyAiModelRequest RequestCalculateCostToVerifyAiModelRequest

// NewRequestCalculateCostToVerifyAiModelRequest instantiates a new RequestCalculateCostToVerifyAiModelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestCalculateCostToVerifyAiModelRequest(commitHash string, platforms []string) *RequestCalculateCostToVerifyAiModelRequest {
	this := RequestCalculateCostToVerifyAiModelRequest{}
	this.CommitHash = commitHash
	this.Platforms = platforms
	return &this
}

// NewRequestCalculateCostToVerifyAiModelRequestWithDefaults instantiates a new RequestCalculateCostToVerifyAiModelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestCalculateCostToVerifyAiModelRequestWithDefaults() *RequestCalculateCostToVerifyAiModelRequest {
	this := RequestCalculateCostToVerifyAiModelRequest{}
	return &this
}

// GetCommitHash returns the CommitHash field value
func (o *RequestCalculateCostToVerifyAiModelRequest) GetCommitHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value
// and a boolean to check if the value has been set.
func (o *RequestCalculateCostToVerifyAiModelRequest) GetCommitHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommitHash, true
}

// SetCommitHash sets field value
func (o *RequestCalculateCostToVerifyAiModelRequest) SetCommitHash(v string) {
	o.CommitHash = v
}

// GetPlatforms returns the Platforms field value
func (o *RequestCalculateCostToVerifyAiModelRequest) GetPlatforms() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Platforms
}

// GetPlatformsOk returns a tuple with the Platforms field value
// and a boolean to check if the value has been set.
func (o *RequestCalculateCostToVerifyAiModelRequest) GetPlatformsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platforms, true
}

// SetPlatforms sets field value
func (o *RequestCalculateCostToVerifyAiModelRequest) SetPlatforms(v []string) {
	o.Platforms = v
}

func (o RequestCalculateCostToVerifyAiModelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestCalculateCostToVerifyAiModelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["commit_hash"] = o.CommitHash
	toSerialize["platforms"] = o.Platforms
	return toSerialize, nil
}

func (o *RequestCalculateCostToVerifyAiModelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"commit_hash",
		"platforms",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestCalculateCostToVerifyAiModelRequest := _RequestCalculateCostToVerifyAiModelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestCalculateCostToVerifyAiModelRequest)

	if err != nil {
		return err
	}

	*o = RequestCalculateCostToVerifyAiModelRequest(varRequestCalculateCostToVerifyAiModelRequest)

	return err
}

type NullableRequestCalculateCostToVerifyAiModelRequest struct {
	value *RequestCalculateCostToVerifyAiModelRequest
	isSet bool
}

func (v NullableRequestCalculateCostToVerifyAiModelRequest) Get() *RequestCalculateCostToVerifyAiModelRequest {
	return v.value
}

func (v *NullableRequestCalculateCostToVerifyAiModelRequest) Set(val *RequestCalculateCostToVerifyAiModelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestCalculateCostToVerifyAiModelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestCalculateCostToVerifyAiModelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestCalculateCostToVerifyAiModelRequest(val *RequestCalculateCostToVerifyAiModelRequest) *NullableRequestCalculateCostToVerifyAiModelRequest {
	return &NullableRequestCalculateCostToVerifyAiModelRequest{value: val, isSet: true}
}

func (v NullableRequestCalculateCostToVerifyAiModelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestCalculateCostToVerifyAiModelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


